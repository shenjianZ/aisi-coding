import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-CfFCjJwO.js";const e={},p=t(`<div class="hint-container tip"><p class="hint-container-title">Pinia</p><blockquote><p>集中式状态管理</p></blockquote></div><p>安装</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> i pinia
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>main.ts</code></p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>createApp<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App.vue&#39;</span>
<span class="token comment">// 第一步：引入pinia</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>createPinia<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>
<span class="token comment">// 第二步：创建pinia</span>
<span class="token keyword">const</span> pinia <span class="token operator">=</span> <span class="token function">createPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 第三步：安装pinia</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>pinia<span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Count.vue</code></p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>{{ countStore.sum }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Count<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span>reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>useCountStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/store/count&#39;</span>

  <span class="token keyword">const</span> countStore <span class="token operator">=</span> <span class="token function">useCountStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="操作pinia的数据" tabindex="-1"><a class="header-anchor" href="#操作pinia的数据"><span>操作<code>pinia</code>的数据</span></a></h3><ul><li>直接修改数据</li><li><code>$patch({})</code> 传入一个对象，改变对应的变量</li><li><code>actions</code> 定义的函数进行修改</li></ul><h3 id="storetorefs" tabindex="-1"><a class="header-anchor" href="#storetorefs"><span>storeToRefs</span></a></h3><blockquote><p>拿到<code>store</code>中的属性的ref对象</p></blockquote><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>{{ countStore.sum }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Count<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span>reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span>useCountStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/store/count&#39;</span>

  <span class="token keyword">const</span> countStore <span class="token operator">=</span> <span class="token function">useCountStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> <span class="token punctuation">{</span>sum<span class="token punctuation">,</span>sss<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">storeToRefs</span><span class="token punctuation">(</span>countStore<span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getters" tabindex="-1"><a class="header-anchor" href="#getters"><span>getters</span></a></h3><h3 id="subscribe" tabindex="-1"><a class="header-anchor" href="#subscribe"><span>$subscribe</span></a></h3>`,14),o=[p];function i(c,l){return s(),a("div",null,o)}const d=n(e,[["render",i],["__file","vue-pinia.html.vue"]]),k=JSON.parse('{"path":"/frontend/vue/vue-pinia.html","title":"状态管理pinia","lang":"zh-CN","frontmatter":{"title":"状态管理pinia","icon":"vue","order":3,"category":"vue","tag":["pinia"],"date":"2024-04-23T00:00:00.000Z","description":"Pinia 集中式状态管理 安装 main.ts Count.vue 操作pinia的数据 直接修改数据 $patch({}) 传入一个对象，改变对应的变量 actions 定义的函数进行修改 storeToRefs 拿到store中的属性的ref对象 getters $subscribe","head":[["meta",{"property":"og:url","content":"https://blog.shenjianl.cn/aisi-coding/frontend/vue/vue-pinia.html"}],["meta",{"property":"og:site_name","content":"爱思文档"}],["meta",{"property":"og:title","content":"状态管理pinia"}],["meta",{"property":"og:description","content":"Pinia 集中式状态管理 安装 main.ts Count.vue 操作pinia的数据 直接修改数据 $patch({}) 传入一个对象，改变对应的变量 actions 定义的函数进行修改 storeToRefs 拿到store中的属性的ref对象 getters $subscribe"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-23T10:23:15.000Z"}],["meta",{"property":"article:author","content":"shenjianZ"}],["meta",{"property":"article:tag","content":"pinia"}],["meta",{"property":"article:published_time","content":"2024-04-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-23T10:23:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"状态管理pinia\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-23T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-23T10:23:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"shenjianZ\\",\\"url\\":\\"https://blog.shenjianl.cn\\",\\"email\\":\\"15202078626@163.com\\"}]}"]]},"headers":[{"level":3,"title":"操作pinia的数据","slug":"操作pinia的数据","link":"#操作pinia的数据","children":[]},{"level":3,"title":"storeToRefs","slug":"storetorefs","link":"#storetorefs","children":[]},{"level":3,"title":"getters","slug":"getters","link":"#getters","children":[]},{"level":3,"title":"$subscribe","slug":"subscribe","link":"#subscribe","children":[]}],"git":{"createdTime":1713867795000,"updatedTime":1713867795000,"contributors":[{"name":"shenjianZ","email":"shenjianZLT@gmail.com","commits":1}]},"readingTime":{"minutes":1.23,"words":185},"filePathRelative":"frontend/vue/vue-pinia.md","localizedDate":"2024年4月23日","excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">Pinia</p>\\n<blockquote>\\n<p>集中式状态管理</p>\\n</blockquote>\\n</div>\\n<p>安装</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">npm</span> i pinia\\n</code></pre></div><p><code>main.ts</code></p>","autoDesc":true}');export{d as comp,k as data};
