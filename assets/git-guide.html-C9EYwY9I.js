import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as r,c as d,a,e,d as s,b as t}from"./app-2UIt3exD.js";const c={},o=t('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><blockquote><p>Git是一个免费的、开源的分布式版本控制系统</p></blockquote><h3 id="版本控制" tabindex="-1"><a class="header-anchor" href="#版本控制"><span>版本控制</span></a></h3><blockquote><p>集中式版本控制</p></blockquote><p>CVS、SVN、VSS ，与中心服务器进行交互</p><blockquote><p>分布式版本控制</p></blockquote><p>git、Bazaar，与中心服务器进行交互，本地有完整副本</p></div><h2 id="git安装" tabindex="-1"><a class="header-anchor" href="#git安装"><span>Git安装</span></a></h2>',3),p={href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://github.com/git-for-windows/git/releases",target:"_blank",rel:"noopener noreferrer"},h=t(`<p>一直点击下一步即可安装完成</p><h2 id="git命令" tabindex="-1"><a class="header-anchor" href="#git命令"><span>Git命令</span></a></h2><h4 id="设置用户签名" tabindex="-1"><a class="header-anchor" href="#设置用户签名"><span>设置用户签名</span></a></h4><ul><li><p>全局设置</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">&quot;your name&quot;</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">&quot;your email&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>本地仓库设置(在你的git仓库目录中执行)</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--local</span> user.name <span class="token string">&quot;your name&quot;</span>
<span class="token function">git</span> config <span class="token parameter variable">--local</span> user.email <span class="token string">&quot;your email&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>注意：若均设置，<code>--local</code> 设置的用户签名将会优先生效</p><p><strong>查看相关配置信息</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--list</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--list</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>还有一种方式，也能设置用户签名你可以通过以下命令在命令行中编辑 <code>Git</code> 的全局配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--edit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行这个命令后，会打开一个文本编辑器，其中包含 Git 的全局配置内容。你可以在这个文件中修改配置项，然后保存退出即可。</p><p>如果你想要编辑当前仓库的配置文件，可以使用以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--local</span> <span class="token parameter variable">--edit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将打开当前仓库的配置文件，你可以在其中编辑配置项，然后保存退出。</p><p>这是我的信息</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>user<span class="token punctuation">]</span>
        name <span class="token operator">=</span> shenjianZ
        email <span class="token operator">=</span> shenjianZLT@gmail.com
<span class="token punctuation">[</span>credential <span class="token string">&quot;https://gitee.com&quot;</span><span class="token punctuation">]</span>
        provider <span class="token operator">=</span> generic
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实际上，他修改的是一个 <code>..gitconfig</code>的文件</p><p>在 <code>C:\\Users\\\${username}</code>这个目录下</p><h4 id="初始化本地库" tabindex="-1"><a class="header-anchor" href="#初始化本地库"><span>初始化本地库</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> init 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>随后将在当前目录生成<code>.git</code>的目录</p><h4 id="查看本地库状态" tabindex="-1"><a class="header-anchor" href="#查看本地库状态"><span>查看本地库状态</span></a></h4><p>显示完整信息</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> status
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>显示简略信息</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> status <span class="token parameter variable">-s</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="添加暂存区" tabindex="-1"><a class="header-anchor" href="#添加暂存区"><span>添加暂存区</span></a></h4><p>追踪文件</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span> <span class="token comment"># 递归添加当前目录、子目录所有文件</span>
<span class="token function">git</span> <span class="token function">add</span> * <span class="token comment"># 添加当前目录所有文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="提交本地库" tabindex="-1"><a class="header-anchor" href="#提交本地库"><span>提交本地库</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> commit 
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;commit message...&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="查看历史版本" tabindex="-1"><a class="header-anchor" href="#查看历史版本"><span>查看历史版本</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> reflog
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="切换历史版本" tabindex="-1"><a class="header-anchor" href="#切换历史版本"><span>切换历史版本</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> reset <span class="token parameter variable">--hard</span> verisonid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,36);function g(m,v){const n=l("ExternalLinkIcon");return r(),d("div",null,[o,a("p",null,[a("a",p,[e("官网地址"),s(n)]),e("、"),a("a",u,[e("Github地址"),s(n)])]),h])}const f=i(c,[["render",g],["__file","git-guide.html.vue"]]),x=JSON.parse('{"path":"/Middleware/git/git-guide.html","title":"Git快速入门","lang":"zh-CN","frontmatter":{"title":"Git快速入门","icon":"git","order":1,"category":"Git","tags":["git"],"date":"2024-04-23T00:00:00.000Z","description":"概述 提示 Git是一个免费的、开源的分布式版本控制系统 版本控制 集中式版本控制 CVS、SVN、VSS ，与中心服务器进行交互 分布式版本控制 git、Bazaar，与中心服务器进行交互，本地有完整副本 Git安装 官网地址、Github地址 一直点击下一步即可安装完成 Git命令 设置用户签名 全局设置 本地仓库设置(在你的git仓库目录中执行)...","head":[["meta",{"property":"og:url","content":"https://blog.shenjianl.cn/aisi-coding/Middleware/git/git-guide.html"}],["meta",{"property":"og:site_name","content":"爱思文档"}],["meta",{"property":"og:title","content":"Git快速入门"}],["meta",{"property":"og:description","content":"概述 提示 Git是一个免费的、开源的分布式版本控制系统 版本控制 集中式版本控制 CVS、SVN、VSS ，与中心服务器进行交互 分布式版本控制 git、Bazaar，与中心服务器进行交互，本地有完整副本 Git安装 官网地址、Github地址 一直点击下一步即可安装完成 Git命令 设置用户签名 全局设置 本地仓库设置(在你的git仓库目录中执行)..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-14T03:51:41.000Z"}],["meta",{"property":"article:author","content":"shenjianZ"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:published_time","content":"2024-04-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-14T03:51:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git快速入门\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-23T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-14T03:51:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"shenjianZ\\",\\"url\\":\\"https://blog.shenjianl.cn\\",\\"email\\":\\"15202078626@163.com\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"Git安装","slug":"git安装","link":"#git安装","children":[]},{"level":2,"title":"Git命令","slug":"git命令","link":"#git命令","children":[{"level":4,"title":"设置用户签名","slug":"设置用户签名","link":"#设置用户签名","children":[]},{"level":4,"title":"初始化本地库","slug":"初始化本地库","link":"#初始化本地库","children":[]},{"level":4,"title":"查看本地库状态","slug":"查看本地库状态","link":"#查看本地库状态","children":[]},{"level":4,"title":"添加暂存区","slug":"添加暂存区","link":"#添加暂存区","children":[]},{"level":4,"title":"提交本地库","slug":"提交本地库","link":"#提交本地库","children":[]},{"level":4,"title":"查看历史版本","slug":"查看历史版本","link":"#查看历史版本","children":[]},{"level":4,"title":"切换历史版本","slug":"切换历史版本","link":"#切换历史版本","children":[]}]}],"git":{"createdTime":1715658701000,"updatedTime":1715658701000,"contributors":[{"name":"omop","email":"116042415+shenjianZ@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":3.57,"words":535},"filePathRelative":"Middleware/git/git-guide.md","localizedDate":"2024年4月23日","excerpt":"<h2>概述</h2>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<blockquote>\\n<p>Git是一个免费的、开源的分布式版本控制系统</p>\\n</blockquote>\\n<h3>版本控制</h3>\\n<blockquote>\\n<p>集中式版本控制</p>\\n</blockquote>\\n<p>CVS、SVN、VSS ，与中心服务器进行交互</p>\\n<blockquote>\\n<p>分布式版本控制</p>\\n</blockquote>\\n<p>git、Bazaar，与中心服务器进行交互，本地有完整副本</p>\\n</div>","autoDesc":true}');export{f as comp,x as data};
